// ----- Linear Gradient -----

@mixin linearGradient($left, $right, $pos){
    background: $left;
	background: -moz-linear-gradient(left, $left $pos, $right 100%);
	background: -webkit-linear-gradient(left, $left $pos, $right 100%);
	background: linear-gradient(to right, $left $pos, $right 100%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#eb145f', endColorstr='#2d3ccd',GradientType=1 );
}

// ----- Usage -----
// .button{
//     @include linearGradient(#cccccc, #666666);
// }


// ----- Retina Images -----

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    background-image: url($image);
    // background-size: $width + px $height + px;
  }
}

// ----- Usage -----
// .logo{
//     background:url(logo.png) no-repeat;
//     @include image-2x("logo-hd.png", 120, 30);
// }

// Max breakpoint
$max-breakpoint: 1025;

// This could be one of your media query breakpoint variables
$wide-screen: "(min-width: #{$max-breakpoint}px)"; 

// Function
@function get-vw($target) {
  // 1 vw is equal to 1% of the viewport width
  $vw-context: ($max-breakpoint * .01) * 1px; // 1% viewport width
  @return ($target/$vw-context) * 1vw;
}

// Mixin
@mixin font-size-vw($size) {
  font-size: get-vw($size);
  // Prevent font-size from getting too big
  @media #{$wide-screen} {
    font-size: $size;
  }
}

@mixin margin-bottom-vw($size) {
  margin-bottom: get-vw($size);
  // Prevent font-size from getting too big
  @media #{$wide-screen} {
    margin-bottom: $size;
  }
}